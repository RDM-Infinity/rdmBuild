ED RDM.LIBS RDM.GET.DATA
DE999
T
F
I
SUBROUTINE RDM.GET.DATA(VAR.LIST,OPTIONS)
*
IF OPTIONS<1> = "TCL" THEN
 LINE = VAR.LIST
END ELSE
 PROCREAD LINE ELSE LINE = "" 
END
*
VAR.LIST = ""
VAR.LIST<1> = "PASSEDNAMES"
VAR.LIST<2> = "PASSEDVALS"
VAR.COUNT = ""
*
*print "l: ":LINE
VAR.STRING = FIELD(LINE," ",2)
*PRINT "V:":VAR.STRING
*
CONVERT '&' TO CHAR(254) IN VAR.STRING
*
VAR.COUNT = DCOUNT(VAR.STRING,CHAR(254))
*
DEBUG = OPTIONS<1>
*
FOR X = 1 TO VAR.COUNT
  CURRENT.VAR = VAR.STRING<X>
  TMP.VALUE = FIELD(CURRENT.VAR,'=',1)
  GOSUB SWAP.HEX
  VAR.LIST<1,-1> = TMP.VALUE
  TMP.VALUE = FIELD(CURRENT.VAR, '=', 2)
  GOSUB SWAP.HEX
  VAR.LIST<2,-1> = TMP.VALUE
NEXT X
RETURN
*********
SWAP.HEX:
*********
CONVERT "+" TO " " IN TMP.VALUE
HEX.CNT = DCOUNT(TMP.VALUE,'%')
FOR Z = HEX.CNT TO 1 STEP -1
   POS = INDEX(TMP.VALUE,'%',Z)
   IF POS THEN
      HEX.VAL = TMP.VALUE[POS,3]
      CHAR.VAL = CHAR(OCONV(HEX.VAL[2,2],"MCXD"))
      TMP.VALUE = SWAP(TMP.VALUE,HEX.VAL,CHAR.VAL)     
   END
NEXT Z
RETURN

F
T
FI
ED RDM.LIBS RDM.SEND.DATA
DE999
T
F
I
SUBROUTINE RDM.SEND.DATA(DATA.STRING,CALLBACK)
PRINT "~~START~~"
TRIM.YN = ""
IF CALLBACK<2> # "" THEN
  TRIM.YN = CALLBACK<2>
  CALLBACK = CALLBACK<1>
END
*
IF CALLBACK # "" THEN
   PRINT CALLBACK:"("
END
*
*
MAX=DCOUNT(DATA.STRING,@AM)
FOR X=1 TO MAX
  IF DATA.STRING<X> = "" THEN CONTINUE
*
  STR = DATA.STRING<X>
  *PRINT "LEN: ":LEN(STR)
  IF TRIM.YN # "" THEN
   PRINT STR
  END ELSE
   PRINT TRIM(STR)
  END
NEXT X
*
IF CALLBACK # "" THEN
  PRINT ")"
END
*
PRINT "~~END~~"
END
*
RETURN

F
T
FI
ED RDM.LIBS FORMAT.ERROR
DE999
T
F
I
SUBROUTINE FORMAT.ERROR(ERROR,TYPE,OPTIONS)
*Written by Brandon Robinson
*Date: 01/09/11
*
*Purpose: format the error array and json or xml
*
FMT.MSG = ""
BEGIN CASE
*
CASE TYPE = "JSON"
*
FMT.MSG<-1> = '{"errors":['
*
CNT = DCOUNT(ERROR,@AM)
FOR X = 1 TO CNT
   IF X > 1 THEN
    FMT.MSG := ","
   END
*
   FMT.MSG<-1> = '{"error":"':ERROR<X>:'"}'
NEXT X
*
FMT.MSG<-1> = ']}'
*
CASE TYPE = "XML"
*
FMT.MSG<-1> = '<errors>'
*
CNT = DCOUNT(ERROR,@AM)
FOR X = 1 TO CNT 
   FMT.MSG<-1> = '<error>':ERROR<X>:'</error>'
NEXT X
*
FMT.MSG<-1> = '</errors>'
*
*
END CASE
*
ERROR = FMT.MSG
*
RETURN

F
T
FI